<Page
    x:Class="MvvmSampleUwp.Views.MessengerRequestPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controls="using:MvvmSampleUwp.Controls"
    xmlns:viewModels="using:MvvmSampleUwp.ViewModels"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    NavigationCacheMode="Enabled">
    <Page.DataContext>
        <viewModels:MessengerPageViewModel x:Name="ViewModel"/>
    </Page.DataContext>
    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{x:Bind ViewModel.LoadDocsCommand}" CommandParameter="Messenger"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <ScrollViewer Padding="16" CanContentRenderOutsideBounds="True">
        <StackPanel Spacing="16">
            <toolkit:MarkdownTextBlock Text="{x:Bind ViewModel.GetParagraph('Using request messages'), Mode=OneWay}"/>

            <controls:InteractiveSample xml:space="preserve">
                <controls:InteractiveSample.Content>
                    <StackPanel Spacing="8" xml:space="default">

                        <TextBlock Text="{x:Bind ViewModel.Username, Mode=OneWay}"/>
                        <Button
                            Content="Click to request the username!"
                            Click="{x:Bind ViewModel.RequestCurrentUsername}"/>
                        <Button
                            Content="Click to reset the local username!"
                            Click="{x:Bind ViewModel.ResetCurrentUsername}"/>
                    </StackPanel>
                </controls:InteractiveSample.Content>
                <controls:InteractiveSample.XamlCode>
&lt;StackPanel Spacing="8">
    &lt;TextBlock Text="{x:Bind ViewModel.Username, Mode=OneWay}"/>
    &lt;Button
        Content="Click to request the username!"
        Click="{x:Bind ViewModel.RequestCurrentUsername}"/>
    &lt;Button
        Content="Click to reset the local username!"
        Click="{x:Bind ViewModel.ResetCurrentUsername}"/>
&lt;/StackPanel>
                </controls:InteractiveSample.XamlCode>
                <controls:InteractiveSample.CSharpCode>
// Simple viewmodel for a module responding to a request username message.
// Don't forget to set the IsActive property to true when this viewmodel is in use!
public class UserSenderViewModel : ObservableRecipient
{
    public string Username { get; private set; } = "Bob";

    protected override void OnActivated()
    {
        Messenger.Register&lt;CurrentUsernameRequestMessage>(this, m => m.Reply(Username));
    }
}

private string username;

public string Username
{
    get => username;
    private set => SetProperty(ref username, value);
}

// Sends a message to request the current username, and updates the property
public void RequestCurrentUsername()
{
    Username = Messenger.Default.Send&lt;CurrentUsernameRequestMessage>();
}

// Resets the current username
public void ResetCurrentUsername()
{
    Username = null;
}

// A sample request message to get the current username
public sealed class CurrentUsernameRequestMessage : RequestMessage&lt;string>
{
}
                </controls:InteractiveSample.CSharpCode>
            </controls:InteractiveSample>
        </StackPanel>
    </ScrollViewer>
</Page>
