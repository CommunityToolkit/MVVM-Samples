<Page
    x:Class="MvvmSample.Views.AsyncRelayCommandPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controls="using:MvvmSampleUwp.Controls"
    xmlns:viewModels="using:MvvmSampleUwp.ViewModels"
    xmlns:views="using:MvvmSampleUwp.Views"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    NavigationCacheMode="Enabled">
    <Page.DataContext>
        <viewModels:AsyncRelayCommandPageViewModel x:Name="ViewModel"/>
    </Page.DataContext>
    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{x:Bind ViewModel.LoadDocsCommand}" CommandParameter="AsyncRelayCommand"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>
    <Page.Resources>
        <views:TaskResultConverter x:Key="TaskResultConverter"/>
    </Page.Resources>

    <ScrollViewer Padding="16" CanContentRenderOutsideBounds="True">
        <StackPanel Spacing="16">
            <controls:MarkedControl Text="{x:Bind ViewModel.Texts, Mode=OneWay, Converter={StaticResource MarkdownSectionConverter}, ConverterParameter = 'AsyncRelayCommand and AsyncRelayCommand&lt;T>'}"
                                    Foreground="{ThemeResource ApplicationForegroundThemeBrush}" />

            <!--<toolkit:MarkdownTextBlock Text="{x:Bind ViewModel.GetParagraph('AsyncRelayCommand and AsyncRelayCommand&lt;T>'), Mode=OneWay}"/>-->
            <controls:MarkedControl Text="{x:Bind ViewModel.Texts, Mode=OneWay, Converter={StaticResource MarkdownSectionConverter}, ConverterParameter = 'How they work'}"
                                    Foreground="{ThemeResource ApplicationForegroundThemeBrush}" />
            <!--<toolkit:MarkdownTextBlock Text="{x:Bind ViewModel.GetParagraph('How they work'), Mode=OneWay}"/>-->
            <controls:MarkedControl Text="{x:Bind ViewModel.Texts, Mode=OneWay, Converter={StaticResource MarkdownSectionConverter}, ConverterParameter = 'Working with asynchronous commands'}"
                                    Foreground="{ThemeResource ApplicationForegroundThemeBrush}" />

            <!--<toolkit:MarkdownTextBlock Text="{x:Bind ViewModel.GetParagraph('Working with asynchronous commands'), Mode=OneWay}"/>-->

            <controls:InteractiveSample xml:space="preserve">
                <controls:InteractiveSample.Content>
                    <StackPanel Spacing="8" xml:space="default">
                        <TextBlock>
                            <Run Text="Task status:"/>
                            <Run Text="{x:Bind ViewModel.DownloadTextCommand.ExecutionTask.Status, Mode=OneWay}"/>
                            <LineBreak/>
                            <Run Text="Result:"/>
                            <Run Text="{x:Bind ViewModel.DownloadTextCommand.ExecutionTask, Converter={StaticResource TaskResultConverter}, Mode=OneWay}"/>
                        </TextBlock>
                        <Button
                            Content="Click me!"
                            Command="{x:Bind ViewModel.DownloadTextCommand}"/>
                        <ProgressRing
                            HorizontalAlignment="Left"
                            IsActive="{x:Bind ViewModel.DownloadTextCommand.IsRunning, Mode=OneWay}"/>
                    </StackPanel>
                </controls:InteractiveSample.Content>
                <controls:InteractiveSample.XamlCode>
&lt;Page.Resources>
    &lt;converters:TaskResultConverter x:Key="TaskResultConverter"/>
&lt;/Page.Resources>
&lt;StackPanel Spacing="8">
    &lt;TextBlock>
        &lt;Run Text="Task status:"/>
        &lt;Run Text="{x:Bind ViewModel.DownloadTextCommand.ExecutionTask.Status, Mode=OneWay}"/>
        &lt;LineBreak/>
        &lt;Run Text="Result:"/>
        &lt;Run Text="{x:Bind ViewModel.DownloadTextCommand.ExecutionTask, Converter={StaticResource TaskResultConverter}, Mode=OneWay}"/>
    &lt;/TextBlock>
    &lt;Button
        Content="Click me!"
        Command="{x:Bind ViewModel.DownloadTextCommand}"/>
    &lt;muxc:ProgressRing
        HorizontalAlignment="Left"
        IsActive="{x:Bind ViewModel.DownloadTextCommand.IsRunning, Mode=OneWay}"/>
&lt;/StackPanel>
                </controls:InteractiveSample.XamlCode>
                <controls:InteractiveSample.CSharpCode>
public MyViewModel()
{
    DownloadTextCommand = new AsyncRelayCommand(DownloadTextAsync);
}

public IAsyncRelayCommand DownloadTextCommand { get; }

private async Task&lt;string> DownloadTextAsync()
{
    await Task.Delay(3000); // Simulate a web request

    return "Hello world!";
}
                </controls:InteractiveSample.CSharpCode>
            </controls:InteractiveSample>
        </StackPanel>
    </ScrollViewer>
</Page>
