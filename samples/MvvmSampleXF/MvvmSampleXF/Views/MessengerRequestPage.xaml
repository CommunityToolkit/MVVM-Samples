<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
			 xmlns:md="clr-namespace:Xam.Forms.Markdown;assembly=Xam.Forms.MarkdownView"
			 xmlns:controls="clr-namespace:MvvmSampleXF.Controls"
             xmlns:local="clr-namespace:MvvmSampleXF"
             local:ViewModelLocator.InitViewModel="True"
			 x:Class="MvvmSampleXF.Views.MessengerRequestPage"
			 Title="Messenger">
	<ScrollView Padding="16">
		<StackLayout Padding="16">
			<md:MarkdownView Markdown="{Binding Path=Texts[Sending and receiving messages], Mode=OneWay}" />

			<controls:InteractiveSample ControlTemplate="{StaticResource InteractiveSampleTemplate}"
										HeightRequest="500">
				<StackLayout Spacing="8">

					<Label Text="{Binding Username, Mode=OneWay}" />
					<Button Text="Click to request the username!"
							Command="{Binding RequestCurrentUsernameCommand}" />
					<Button Text="Click to reset the local username!"
							Command="{Binding ResetCurrentUsernameCommand}" />
				</StackLayout>
				<controls:InteractiveSample.XamlCode>
					```xml
&lt;StackLayout Spacing="8">

    &lt;Label Text="{Binding Username, Mode=OneWay}" />
    &lt;Button Text="Click to request the username!"
            Command="{Binding RequestCurrentUsernameCommand}" />
    &lt;Button Text="Click to reset the local username!"
            Command="{Binding ResetCurrentUsernameCommand}" />
&lt;/StackLayout>

```
				</controls:InteractiveSample.XamlCode>
				<controls:InteractiveSample.CSharpCode>
					```csharp
public class UserSenderViewModel : ObservableRecipient
{
    public UserSenderViewModel()
    {
        SendUserMessageCommand = new RelayCommand(SendUserMessage);
    }

    public ICommand SendUserMessageCommand { get; }

    private string username = "Bob";

    public string Username
    {
        get => username;
        private set => SetProperty(ref username, value);
    }

    protected override void OnActivated()
    {
        Messenger.Register
			&lt;CurrentUsernameRequestMessage>(this, m => m.Reply(Username));
    }

    public void SendUserMessage()
    {
        Username = Username == "Bob" ? "Alice" : "Bob";

        Messenger.Send(new UsernameChangedMessage(Username));
    }
}

// A sample request message to get the current username
public sealed class CurrentUsernameRequestMessage : RequestMessage&lt;string>
{
}
```
				</controls:InteractiveSample.CSharpCode>
			</controls:InteractiveSample>

		</StackLayout>
	</ScrollView>
</ContentPage>